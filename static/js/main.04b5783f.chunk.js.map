{"version":3,"sources":["Components/NewTodoForm/NewTodoForm.js","Components/EditTodoForm/EditTodoForm.js","Components/Todo/Todo.js","Components/TodoList/TodoList.js","index.js"],"names":["NewTodoForm","props","handleChange","event","setState","target","name","value","handleSubmit","preventDefault","state","text","newTodo","id","uuidv4","addTodo","onSubmit","this","className","type","onChange","placeholder","Component","EditTodoForm","updateTodo","todoId","currentText","cancelEditing","style","flexGrow","autoFocus","onClick","Todo","handleClick","deleteTodoAnimation","addTodoAnimation","setTimeout","removeTodo","switchEditing","isEditing","setRenderAfterEditing","setCompleted","isCompleted","icon","faCheck","disabled","faEdit","faTrashAlt","TodoList","todo","prevState","todos","todoID","filter","updatedText","updatedTodos","map","App","document","body","classList","add","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.04b5783f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './NewTodoForm.scss';\r\nimport '../../flex.scss';\r\n\r\nclass NewTodoForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttext: '',\r\n\t\t};\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif (this.state.text !== '') {\r\n\t\t\tconst newTodo = { ...this.state, id: uuidv4() };\r\n\t\t\tthis.props.addTodo(newTodo);\r\n\t\t}\r\n\r\n\t\tthis.setState({ text: '' });\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form onSubmit={this.handleSubmit} className=\"flex-container\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tname=\"text\"\r\n\t\t\t\t\tvalue={this.state.text}\r\n\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\tplaceholder=\"Add New Task...\"\r\n\t\t\t\t></input>\r\n\t\t\t\t<button id=\"new-todo-form-button\" type=\"submit\"></button>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NewTodoForm;\r\n","import React, { Component } from 'react';\r\nimport '../../flex.scss';\r\nimport './EditTodoForm.scss';\r\n\r\nclass EditTodoForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentText: this.props.currentText,\r\n\t\t};\r\n\t}\r\n\r\n\thandleChange = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t});\r\n\t};\r\n\r\n\thandleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tthis.props.updateTodo(this.props.todoId, this.state.currentText);\r\n\t\tthis.props.cancelEditing();\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"flex-container edit-todo\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} style={{ flexGrow: 8 }}>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"currentText\"\r\n\t\t\t\t\t\tvalue={this.state.currentText}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tclassName=\"edit-todo-input\"\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t></input>\r\n\t\t\t\t\t{/* <button id=\"complete-button\">Submit</button> */}\r\n\t\t\t\t</form>\r\n\t\t\t\t<button onClick={this.props.cancelEditing} id=\"cancel-button\">\r\n\t\t\t\t\tX\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EditTodoForm;\r\n","import React, { Component } from 'react';\r\nimport './Todo.scss';\r\nimport EditTodoForm from '../EditTodoForm/EditTodoForm';\r\nimport '../../flex.scss';\r\nimport { faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nclass Todo extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tisEditing: false,\r\n\t\t\tisCompleted: false,\r\n\t\t\tdeleteTodoAnimation: '',\r\n\t\t\taddTodoAnimation: 'addAnimation',\r\n\t\t};\r\n\t}\r\n\r\n\thandleClick = () => {\r\n\t\tthis.setState({ deleteTodoAnimation: 'deleteAnimation', addTodoAnimation: '' });\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.props.removeTodo(this.props.id);\r\n\t\t\tthis.setState({ deleteTodoAnimation: '' });\r\n\t\t}, 1450);\r\n\t};\r\n\r\n\tswitchEditing = () => {\r\n\t\tthis.setState({\r\n\t\t\tisEditing: !this.state.isEditing,\r\n\t\t\taddTodoAnimation: '',\r\n\t\t});\r\n\t};\r\n\r\n\tsetRenderAfterEditing = () => {};\r\n\r\n\tsetCompleted = () => {\r\n\t\tthis.setState({ isCompleted: !this.state.isCompleted });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst { text } = this.props;\r\n\r\n\t\tif (!this.state.isEditing) {\r\n\t\t\treturn (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName={`todo flex-container ${this.state.deleteTodoAnimation} ${this.state.addTodoAnimation}`}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span className={this.state.isCompleted ? 'checkboxTicked' : 'checkbox'}>\r\n\t\t\t\t\t\t{this.state.isCompleted ? <FontAwesomeIcon icon={faCheck} /> : null}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<p\r\n\t\t\t\t\t\tstyle={{ flexGrow: 8 }}\r\n\t\t\t\t\t\tclassName={this.state.isCompleted ? 'crossedOff' : null}\r\n\t\t\t\t\t\tonClick={this.setCompleted}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{text}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<div className=\"todo-buttons\">\r\n\t\t\t\t\t\t{!this.state.isCompleted ? (\r\n\t\t\t\t\t\t\t<button onClick={this.switchEditing} id=\"edit-button\">\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<button id=\"disabled-edit-button\" disabled>\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faEdit} />\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<button onClick={this.handleClick} id=\"remove-button\">\r\n\t\t\t\t\t\t\t<FontAwesomeIcon icon={faTrashAlt} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<EditTodoForm\r\n\t\t\t\t\tcurrentText={text}\r\n\t\t\t\t\tcancelEditing={this.switchEditing}\r\n\t\t\t\t\tupdateTodo={this.props.updateTodo}\r\n\t\t\t\t\ttodoId={this.props.id}\r\n\t\t\t\t\tsetRenderAfterEditing={this.setRenderAfterEditing}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default Todo;\r\n","import React, { Component } from 'react';\r\nimport NewTodoForm from '../NewTodoForm/NewTodoForm';\r\nimport Todo from '../Todo/Todo';\r\nimport './TodoList.scss';\r\n\r\nclass TodoList extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttodos: [],\r\n\t\t};\r\n\t}\r\n\r\n\taddTodo = (todo) => {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn { todos: [...prevState.todos, todo] };\r\n\t\t});\r\n\t};\r\n\r\n\tremoveTodo = (todoID) => {\r\n\t\tthis.setState((prevState) => {\r\n\t\t\treturn { todos: prevState.todos.filter((todo) => todo.id !== todoID) };\r\n\t\t});\r\n\t};\r\n\r\n\tupdateTodo = (todoID, updatedText) => {\r\n\t\tconst updatedTodos = this.state.todos.map((todo) => {\r\n\t\t\tif (todo.id === todoID) {\r\n\t\t\t\treturn { ...todo, text: updatedText };\r\n\t\t\t}\r\n\r\n\t\t\treturn todo;\r\n\t\t});\r\n\r\n\t\tthis.setState({ todos: updatedTodos });\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst todos = this.state.todos.map((todo) => (\r\n\t\t\t<Todo\r\n\t\t\t\ttext={todo.text}\r\n\t\t\t\tremoveTodo={this.removeTodo}\r\n\t\t\t\tupdateTodo={this.updateTodo}\r\n\t\t\t\tid={todo.id}\r\n\t\t\t\tkey={Todo.id}\r\n\t\t\t/>\r\n\t\t));\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"todoList\">\r\n\t\t\t\t<h2>TO-DO LIST</h2>\r\n\t\t\t\t<NewTodoForm addTodo={this.addTodo} />\r\n\t\t\t\t<span className=\"todos\">{todos}</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TodoList;\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoList from './Components/TodoList/TodoList';\nimport './index.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n\n  render() {\n    document.body.classList.add('background');\n\n    return ( < TodoList/> );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}